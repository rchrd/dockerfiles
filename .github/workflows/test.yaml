name: test

on: ["push"]

env:
  IMAGE_NAME: node-red

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: get_version
        run: |
          if [ -f ./${{ env.IMAGE_NAME }}/version ]
          then
            VERSION=$(cat ./${{ env.IMAGE_NAME }}/version)
          else
            VERSION=latest
          fi
          echo "${VERSION}"
          echo "::set-output name=version::${VERSION}"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/rchrd/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.get_version.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=${{ steps.get_version.outputs.version }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./${{ env.IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64
          push: false
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}